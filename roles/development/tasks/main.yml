- set_fact:
    gcc_script: "https://gist.githubusercontent.com/neetjn/7c28db8a7a31766f0e329590e4de213f/raw/973d9712c9323319bb99519bc43b34a2d778daa4/gcc7.sh"

- name: Check if ssh key exists
  stat:
    path: "{{ssh_directory}}/git"
  register: git_ssh_key_exists

- name: Generate ssh key for git
  shell: |
    ssh-keygen -t rsa -C "{{git_ssh_key_user}}" -f "{{ssh_directory}}/git" -N ''
  become: False
  when: git_ssh_key_exists.stat.exists == False
  
- name: Install CMake
  apt:
    name: cmake
    state: present

- name: Install gcc 7
  shell: "curl {{gcc_script}} | sh"

- name: Install Python development libs
  apt:
    name: python-dev
    state: present

- name: Install Python (3.6) development libs
  apt:
    name: python3.6-dev
    state: present

- name: Install Python 3.7
  apt:
    name: python3.7
    state: present

- name: Install Python (3.7) development libs
  apt:
    name: python3.7-dev
    state: present

- name: Install pylint cli and tools
  pip:
    name: pylint
    state: present

- name: Install httpie cli
  pip:
    name: httpie
    state: present

- name: Install AWS cli
  pip:
    name: awscli
    version: 1.11.130
    state: present

- name: Check Docker Installed
  shell: which docker
  register: docker_check
  ignore_errors: True

# will install the latest version of docker
- name: Install Docker
  shell: curl https://get.docker.com/ | sh
  when: docker_check.rc == 1

# https://github.com/ansible/ansible/issues/20492#issuecomment-274081101
- name: Install docker compose
  pip:
    name: docker-compose
    version: 1.9.0
    state: present

- name: Install Twine
  pip:
    name: twine
    state: present

- name: Install Sphinx
  pip:
    name: sphinx
    state: present

- name: Install n node.js version manager
  npm:
    name: n
    global: yes
    state: present

- name: Install node.js 10 stable
  shell: n 10

- name: Install coffee-script
  npm:
    name: coffee-script
    global: yes
    state: present

- name: Install webpack
  npm:
    name: webpack
    global: yes
    state: present

- name: Install ruby
  apt:
    name: ruby
    state: present

- name: Install ruby development tools
  apt:
    name: ruby-dev
    state: present

- name: Install travis-cli
  gem:
    name: travis-cli
    state: present

- name: Install datagrip
  shell: snap install datagrip --classic

- name: Install insomnia rest tool
  shell: snap install insomnia

# check if mongodb-compass installed
- name: Check mongodb compass Installed
  shell: which mongodb-compass
  register: compass_check
  ignore_errors: True

- name: Install mongodb compass
  shell: |
    wget -O /tmp/compass.deb https://downloads.mongodb.com/compass/mongodb-compass_1.11.1_amd64.deb
    dpkg --install /tmp/compass.deb
    rm -rf /tmp/compass.deb
  when: compass_check.rc == 1

# check if vscode installed
- name: Check VSCode Installed
  shell: which code
  register: code_check
  ignore_errors: True

# will install the latest version of vscode
- name: Install Code
  shell: snap install code --classic
  when: code_check.rc == 1

# assumes script exists - see common tasks for cloning dotfiles
- name: Install Code Extensions
  shell: sh "{{home_directory}}"/.tools/install-code-extensions.sh
  become: False
  ignore_errors: True

- name: Add vim8 ppa
  apt_repository:
    validate_certs: no
    repo: ppa:jonathonf/vim
    state: present

- name: Install vim
  apt:
    name: vim
    state: present

- name: Install pathogen for vim
  shell: |
    mkdir -p ~/.vim/autoload ~/.vim/bundle
    curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

- name: Install apt-vim
  shell: |
    curl -sL https://raw.githubusercontent.com/egalpin/apt-vim/master/install.sh | sh
    chmod +x "{{home_directory}}/apt-vim/apt-vim"
    cat "{{home_directory}}/.bashrc" | grep apt-vim || echo "alias apt-vim='{{home_directory}}/apt-vim/apt-vim' >> {{home_directory}}/.bashrc"
    cat "{{home_directory}}/.zshrc" | grep apt-vim || echo "alias apt-vim='{{home_directory}}/apt-vim/apt-vim' >> {{home_directory}}/.zshrc"
  become: False

# assumes script exists - see common tasks for cloning dotfiles
- name: Install vim plugins
  shell: |
    apt-vim="{{home_directory}}/apt-vim/apt-vim" sh "{{home_directory}}"/.tools/install-apt-vim-extensions.sh
  become: False

- name: Install editorconfig core
  apt:
    name: editorconfig
    state: present

- name: Install gvim
  apt:
    name: vim-gnome
    state: present
